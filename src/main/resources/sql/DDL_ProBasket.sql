	----------------------------------------
    -- 0º. SOLO HACER PARA BORRAR TODO
    ----------------------------------------
    DBMS_OUTPUT.PUT_LINE('ELMININANDO LA TABLA CONFIGURACION ...');
    EXECUTE IMMEDIATE 'DROP TABLE TIPOMENU';
    EXECUTE IMMEDIATE 'DROP TABLE MENU';
    EXECUTE IMMEDIATE 'DROP TABLE CONFIGURACION';
    EXECUTE IMMEDIATE 'DROP TABLE OPERACION';
    EXECUTE IMMEDIATE 'DROP TABLE ECONOMIA';
    EXECUTE IMMEDIATE 'DROP TABLE GASTO';
    
	----------------------------------------
    -- 1º. CREAR LAS SEQUENCES SI NO EXISTEN
    ----------------------------------------
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LAS SECUENCIAS DEL ECONOMIA ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_SEQUENCES WHERE SEQUENCE_NAME LIKE 'SEQ_ECONOMIA';
    IF CONT1 != 1 THEN
            DBMS_OUTPUT.PUT_LINE('CREAR SECUENCIA SEQ_ECONOMIA');
            EXECUTE IMMEDIATE 'CREATE SEQUENCE SEQ_ECONOMIA INCREMENT BY 1';
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LAS SECUENCIAS DEL GASTO ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_SEQUENCES WHERE SEQUENCE_NAME LIKE 'SEQ_GASTO';
    IF CONT1 != 1 THEN
            DBMS_OUTPUT.PUT_LINE('CREAR SECUENCIA SEQ_GASTO');
            EXECUTE IMMEDIATE 'CREATE SEQUENCE SEQ_GASTO INCREMENT BY 1';
    END IF;    
        
    
    -------------------------------------    
    -- 2º. CREAR LAS TABLAS SI NO EXISTEN
    -------------------------------------
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA TIPOMENU ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'TIPOMENU';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA TIPOMENU');
           EXECUTE IMMEDIATE
            'CREATE TABLE TIPOMENU (
              CODTIPOMENU  	 	VARCHAR2(2)  NOT NULL,
              DESCRIPCION       VARCHAR2(30)  NOT NULL,
              CONSTRAINT PK_TIPOMENU
              PRIMARY KEY ( CODTIPOMENU ))';    	
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA MENU ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'MENU';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA MENU');
           EXECUTE IMMEDIATE
            'CREATE TABLE MENU (
              CODMENU  	 		VARCHAR2(3)  NOT NULL,
              DESCRIPCION       VARCHAR2(50)  NOT NULL,
			  CODTIPOMENU  	 	VARCHAR2(2)  NOT NULL,
              CONSTRAINT PK_MENU PRIMARY KEY ( CODMENU ),
			  CONSTRAINT FK_TIPOMENU FOREIGN KEY (CODTIPOMENU) REFERENCES TIPOMENU(CODTIPOMENU))';
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA CONFIGURACION ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'CONFIGURACION';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA CONFIGURACION');
           EXECUTE IMMEDIATE
            'CREATE TABLE CONFIGURACION (
              PARAMETRO  	 VARCHAR2(50)  NOT NULL,
              VALOR          VARCHAR2(50)  NOT NULL,
              CONSTRAINT PK_CONFIGURACION
              PRIMARY KEY ( PARAMETRO ))';    	
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA OPERACION ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'OPERACION';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA OPERACION');
           EXECUTE IMMEDIATE
            'CREATE TABLE OPERACION (
              CODOPERA  	 	VARCHAR2(10)  NOT NULL,
              DESCRIPCION       VARCHAR2(50)  NOT NULL,
              CONSTRAINT PK_OPERACION
              PRIMARY KEY ( CODOPERA ))';    	
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA ECONOMIA ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'ECONOMIA';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA ECONOMIA');
           EXECUTE IMMEDIATE
            'CREATE TABLE ECONOMIA (
              CODECONO  	 	VARCHAR2(10)  NOT NULL,
              DINERO       		NUMBER(8,2)   NOT NULL,
              CONSTRAINT PK_ECONOMIA
              PRIMARY KEY ( CODECONO ))';    	
    END IF;    
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA GASTO ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'GASTO';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA GASTO');
           EXECUTE IMMEDIATE
            'CREATE TABLE GASTO (
              CODGASTO  	 	VARCHAR2(10)  NOT NULL,
              FECHA       		DATE  		  NOT NULL,
			  DETALLE  	 		VARCHAR2(100) NOT NULL,
			  CODOPERA  	 	VARCHAR2(10)  NOT NULL,
			  CODECONO  	 	VARCHAR2(10)  NOT NULL,
              CONSTRAINT PK_GASTO PRIMARY KEY ( CODGASTO ), 
			  CONSTRAINT FK_OPERACION FOREIGN KEY (CODOPERA) REFERENCES OPERACION(CODOPERA),
              CONSTRAINT FK_ECONOMIA FOREIGN KEY (CODECONO) REFERENCES ECONOMIA(CODECONO))';
    END IF;      
    
    
    
    
    
    --DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA PROP_FILES ...');

    --SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'PROP_FILES';
    --IF CONT1 != 1 THEN
    --        DBMS_OUTPUT.PUT_LINE('CREAR TABLA PROP_FILES');

    --       EXECUTE IMMEDIATE
    --        'CREATE TABLE PROP_FILES (
    --          ID_PROPIEDAD  VARCHAR2(10)   NOT NULL,
    --          FICH          VARCHAR2(300)  NOT NULL,
    --          PORTAL        VARCHAR2(30),
    --          VERSION       NUMBER(10),
	--		  ID_TIPO 		NUMBER(10),
    --          CONSTRAINT PK_PROP_FILES
    --          PRIMARY KEY ( ID_PROPIEDAD ))';
      
	--ELSE
		--Si la tabla existe, comprobamos que tenga la columna TEST_URL, si no, se altera la tabla
	--	SELECT COUNT(1)INTO CONT1 FROM ALL_TAB_COLS WHERE TABLE_NAME='PROP_FILES' AND COLUMN_NAME='ID_TIPO';
	--	IF CONT1 != 1 THEN
    --		DBMS_OUTPUT.PUT_LINE('No existe la columna ID_TIPO para la tabla PROP_FILES');
    --		EXECUTE IMMEDIATE 'ALTER TABLE PROP_FILES ADD ID_TIPO NUMBER(10)';
	--	END IF;		
    --END IF;
    
    --SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'PROPERTIES';
    --IF CONT1 != 1 THEN
    --        DBMS_OUTPUT.PUT_LINE('CREAR TABLA PROPERTIES');

    --        EXECUTE IMMEDIATE
    --        'CREATE TABLE PROPERTIES (
    --          ID             VARCHAR2(10),
    --          ID_PROPIEDAD   VARCHAR2(10),
    --          DEPEN_MAQUINA  VARCHAR2(50),
    --          CLAVE          VARCHAR2(700) NOT NULL,
    --          VALOR          VARCHAR2(4000),
    --          TIPO           VARCHAR2(10),
    --          CONSTRAINT PK_PROPERTIES
    --          PRIMARY KEY ( ID ),
    --          CONSTRAINT FK_PROP_FILES FOREIGN KEY (ID_PROPIEDAD) REFERENCES PROP_FILES(ID_PROPIEDAD))';			  			  
    --END IF;       
    
	-------------------------------------
	-- 3º CREAR LOS INDICES SI NO EXISTEN
	-------------------------------------
	
	--DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DEL INDICE IDX_QRTZ_J_REQ_RECOVERY ...');		
		
	--SELECT COUNT(1) INTO CONT1 FROM ALL_INDEXES WHERE INDEX_NAME LIKE 'IDX_QRTZ_J_REQ_RECOVERY';
    --IF CONT1 != 1 THEN
--            DBMS_OUTPUT.PUT_LINE('CREAR INDICE IDX_QRTZ_J_REQ_RECOVERY EN LA TABLA QRTZ_JOB_DETAILS');
--			EXECUTE IMMEDIATE  'CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(REQUESTS_RECOVERY)';
--	END IF;    
	
	
	