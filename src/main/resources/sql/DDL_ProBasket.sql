	----------------------------------------
    -- 0º. SOLO HACER PARA BORRAR TODO
    ----------------------------------------
    DBMS_OUTPUT.PUT_LINE('ELMININANDO LA TABLA CONFIGURACION ...');
    EXECUTE IMMEDIATE 'DROP TABLE TIPOMENU';
    EXECUTE IMMEDIATE 'DROP TABLE MENU';
    EXECUTE IMMEDIATE 'DROP TABLE CONFIGURACION';
    EXECUTE IMMEDIATE 'DROP TABLE OPERACION';
    EXECUTE IMMEDIATE 'DROP TABLE ECONOMIA';
    EXECUTE IMMEDIATE 'DROP TABLE DETECONOMIA';
    
	----------------------------------------
    -- 1º. CREAR LAS SEQUENCES SI NO EXISTEN
    ----------------------------------------
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LAS SECUENCIAS DEL ECONOMIA ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_SEQUENCES WHERE SEQUENCE_NAME LIKE 'SEQ_ECONOMIA';
    IF CONT1 != 1 THEN
            DBMS_OUTPUT.PUT_LINE('CREAR SECUENCIA SEQ_ECONOMIA');
            EXECUTE IMMEDIATE 'CREATE SEQUENCE SEQ_ECONOMIA INCREMENT BY 1';
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LAS SECUENCIAS DEL DETECONOMIA ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_SEQUENCES WHERE SEQUENCE_NAME LIKE 'SEQ_DETECONOMIA';
    IF CONT1 != 1 THEN
            DBMS_OUTPUT.PUT_LINE('CREAR SECUENCIA SEQ_DETECONOMIA');
            EXECUTE IMMEDIATE 'CREATE SEQUENCE SEQ_DETECONOMIA INCREMENT BY 1';
    END IF;    
        
    
    -------------------------------------    
    -- 2º. CREAR LAS TABLAS SI NO EXISTEN
    -------------------------------------
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA TIPOMENU ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'TIPOMENU';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA TIPOMENU');
           EXECUTE IMMEDIATE
            'CREATE TABLE TIPOMENU (
              CODTIPOMENU  	 	VARCHAR2(2)  NOT NULL,
              DESCRIPCION       VARCHAR2(30)  NOT NULL,
              CONSTRAINT PK_TIPOMENU
              PRIMARY KEY ( CODTIPOMENU ))';    	
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA MENU ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'MENU';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA MENU');
           EXECUTE IMMEDIATE
            'CREATE TABLE MENU (
              CODMENU  	 		VARCHAR2(3)  NOT NULL,
              DESCRIPCION       VARCHAR2(50)  NOT NULL,
			  CODTIPOMENU  	 	VARCHAR2(2)  NOT NULL,
              CONSTRAINT PK_MENU PRIMARY KEY ( CODMENU ),
			  CONSTRAINT FK_TIPOMENU FOREIGN KEY (CODTIPOMENU) REFERENCES TIPOMENU(CODTIPOMENU))';
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA CONFIGURACION ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'CONFIGURACION';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA CONFIGURACION');
           EXECUTE IMMEDIATE
            'CREATE TABLE CONFIGURACION (
              PARAMETRO  	 VARCHAR2(50)  NOT NULL,
              VALOR          VARCHAR2(50)  NOT NULL,
              CONSTRAINT PK_CONFIGURACION
              PRIMARY KEY ( PARAMETRO ))';    	
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA OPERACION ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'OPERACION';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA OPERACION');
           EXECUTE IMMEDIATE
            'CREATE TABLE OPERACION (
              CODOPERA  	 	VARCHAR2(3)  NOT NULL,
              DESCRIPCION       VARCHAR2(100)  NOT NULL,
              CONSTRAINT PK_OPERACION
              PRIMARY KEY ( CODOPERA ))';    	
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA ECONOMIA ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'ECONOMIA';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA ECONOMIA');
           EXECUTE IMMEDIATE
            'CREATE TABLE ECONOMIA (
              CODECONO  	 	VARCHAR2(10)  NOT NULL,
              DINERO       		NUMBER(8)   NOT NULL,
              CONSTRAINT PK_ECONOMIA
              PRIMARY KEY ( CODECONO ))';    	
    END IF;    
    
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA DETECONOMIA ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'DETECONOMIA';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA DETECONOMIA');
           EXECUTE IMMEDIATE
            'CREATE TABLE DETECONOMIA (
              CODDETECONOMIA 	VARCHAR2(10)  NOT NULL,
              FECHA       		DATE  		  NOT NULL,
			  DETALLE  	 		VARCHAR2(100) NOT NULL,
			  CODOPERA  	 	VARCHAR2(10)  NOT NULL,
			  CODECONO  	 	VARCHAR2(10)  NOT NULL,
              CONSTRAINT PK_CODDETECONOMIA PRIMARY KEY ( CODDETECONOMIA ), 
			  CONSTRAINT FK_OPERACION FOREIGN KEY (CODOPERA) REFERENCES OPERACION(CODOPERA),
              CONSTRAINT FK_ECONOMIA FOREIGN KEY (CODECONO) REFERENCES ECONOMIA(CODECONO))';
    END IF;      
    
    
    -- TABLA QUE NO ESTA BIEN PORQUE LAS FOREING KEY NO EXISTEN...
    DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DE LA TABLA USUARIO ...');
    SELECT COUNT(1) INTO CONT1 FROM ALL_TABLES WHERE TABLE_NAME LIKE 'USUARIO';
    IF CONT1 != 1 THEN
    	DBMS_OUTPUT.PUT_LINE('CREAR TABLA USUARIO');
           EXECUTE IMMEDIATE
            'CREATE TABLE USUARIO (
              LOGIN    			VARCHAR2(20)  NOT NULL,
			  PASSWORD 			VARCHAR2(200)  NOT NULL,
			  EMAIL 			VARCHAR2(50)  NOT NULL,
			  NACIMIENTO		VARCHAR2(4) NOT NULL,
			  SEXO 				VARCHAR2(1)  NOT NULL,
			  ACTIVO			VARCHAR2(1)  NOT NULL,
			  ADMINISTRADOR		VARCHAR2(1)  NOT NULL,
			  CODECONO  	 	VARCHAR2(10)  NOT NULL,
			  CONSTRAINT PK_LOGIN PRIMARY KEY ( LOGIN ),
			  CONSTRAINT FK_USR_ECONOMIA FOREIGN KEY (CODECONO) REFERENCES ECONOMIA(CODECONO))';
--CONSTRAINT FK_LIGA FOREIGN KEY (CODLIGA) REFERENCES OPERACION(CODLIGA),
--CONSTRAINT FK_EQUIPO FOREIGN KEY (CODEQUIPO) REFERENCES OPERACION(CODEQUIPO),

    END IF;      
    
    
    
	-------------------------------------
	-- 3º CREAR LOS INDICES SI NO EXISTEN
	-------------------------------------
	
	--DBMS_OUTPUT.PUT_LINE('CONSULTANDO EXISTENCIA DEL INDICE IDX_QRTZ_J_REQ_RECOVERY ...');		
		
	--SELECT COUNT(1) INTO CONT1 FROM ALL_INDEXES WHERE INDEX_NAME LIKE 'IDX_QRTZ_J_REQ_RECOVERY';
    --IF CONT1 != 1 THEN
--            DBMS_OUTPUT.PUT_LINE('CREAR INDICE IDX_QRTZ_J_REQ_RECOVERY EN LA TABLA QRTZ_JOB_DETAILS');
--			EXECUTE IMMEDIATE  'CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(REQUESTS_RECOVERY)';
--	END IF;    
	
	
	